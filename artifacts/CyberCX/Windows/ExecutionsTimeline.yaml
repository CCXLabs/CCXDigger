name: Packs.CyberCX.Windows.ExecutionsTimeline
description: |
    This artifact provides information about programs run on the computer. The results are obtained from several data sources, including UserAssist, Windows Timeline, RecentApps, Shimcache, Prefetch and SRUM database.
    
    Please refer to the [wiki](https://github.com/CCXLabs/CCXLabsVelociraptor/wiki/Program-Execution-%5B0.1%5D) for more information to assist with interpreting these results. We note that each computer and network will vary significantly in what programs are authorised, so careful review of these results should be performed to identify any suspicious programs for the computer being scanned.

    ## Reviewing full results

    Each list below shows the results from examination of a single data source. A single execution may therefore appear in multiple lists. While this creates duplication, examining multiple data sources allows for building a richer profile of program execution, since different data sources record different information about program execution. Note also that some data sources may not be present or populated, which will result in an empty list below.
    
    Each list is restricted to displaying 50 rows, with more information available in the ZIP file accompanying this report, in a CSV file named after the data source. To review the full results, simply:

    * Extract the ZIP file into a folder
    * In the decompressed folder, go to the path *Collection-(TargetComputer)-date-time\Packs.CyberCX.Windows.ExecutionsTimeline\(ArtifactType)*
    * Open the JSON file corresponding to the data source you want to investigate, using a text editor or JSON tool of your choice
    * Search through the results and perform any further checks as needed.

precondition: SELECT OS From info() where OS = 'windows'

sources:
  - name: UserAssist
    queries:
      - SELECT * FROM Artifact.Windows.Registry.UserAssist()
    description: One of several data sources showing programs run on a computer. UserAssist indicates programs with a graphical user interface (*GUI*) that have been executed interactively by a user.

  - name: Timeline
    queries:
      - SELECT * FROM Artifact.Windows.Forensics.Timeline()
    description: One of several data sources showing programs run on a computer. The Windows Timeline indicates programs that have been executed interactively by users, including when it was used.

  - name: RecentApps
    queries:
      - SELECT * FROM Artifact.Windows.Forensics.RecentApps()
    description: One of several data sources showing programs run on a computer. RecentApps indicates programs that have recently been executed interactively by a user.

  - name: ShimCache
    queries:
      - SELECT * FROM Artifact.Windows.Registry.AppCompatCache()
    description: One of several data sources showing programs run on a computer. ShimCache records programs executed by a user or in an automated fashion, or programs in directories opened by a user.

  - name: Prefetch
    queries:
      - SELECT * FROM Artifact.Windows.Forensics.Prefetch()
    description: One of several data sources showing programs run on a computer. Prefetch indicates programs executed by a user or in an automated fashion, and records several historical execution dates.

  - name: SRUM
    queries:
    - SELECT * FROM Artifact.Windows.Forensics.SRUM(source="Execution Stats")
    description: One of several data sources showing programs run on a computer. The SRUM database contains programs executed on a computer and details about resource and network usage for those programs.

reports:
  - type: CLIENT
    template: |
        # Program Execution History

        {{ .Description }}

        {{ $rows := Query "SELECT * FROM source(source='UserAssist') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## UserAssist

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        UserAssist is a record of programs run interactively by users, specifically those which use a Graphical User Interface (GUI). Where link files are shown, often with the same timestamps as the executables, this indicates a program opened by a shortcut.

        This data souce is particularly useful for identifying GUI programs (including shells such as the Command Prompt and PowerShell) launched by compromised user accounts.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information on interpreting these results, see the CCX Digger [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='UserAssist') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}

        {{ $rows := Query "SELECT * FROM source(source='Prefetch') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## Prefetch

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        Prefetch is another data source which records the execution of programs, both through the GUI and other means. Due to its purpose (optimsation of program execution), Prefetch also stores details of modules loaded, if deeper analysis is required. Prefetch entries are not associated with user accounts, so analysis of other data sources is required to link any malicious activity with the accounts used to execute them.

        Prefetch provides an execution count, and the timestamps of last execution and some previous executions, which can be useful for profiling the repeated use of suspicious programs.

        This artifact is not available on servers unless it has been enabled in configuration or Group Policy.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information about interpreting these results is available on the [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='Prefetch') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}

        {{ $rows := Query "SELECT * FROM source(source='Shimcache') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## Shimcache

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        The Shimcache mechanism provides compatibility tracking, providing a record of programs present on the system. Shimcache records (in Registries on disk) are written on reboot or shutdown, meaning the entries shown here are for the period before this last occured on this system. Shimcache record roll over as new programs are loaded, but typically store a fair duration of logs, making it useful to identify historical programs as well as recent ones.

        Unlike other findings shown here, presence of an executable in Shimcache does not specifically mean execution, unless the "execution flag" in the entry is set. If this flag is not set, the executable file was still present in the specified location.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information about interpreting these results is available on the [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='Shimcache') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}

        {{ $rows := Query "SELECT * FROM source(source='SRUM') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## SRUM

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        The System Resource Usage Monitor (SRUM) is a database maintained by Windows to track resource usage by programs. Some of this information is provided to the user in the App History section of the Windows Task Manager. This can be used to identify programs which executed, how long they ran and how much data they transmitted over the network.

        SRUM is only available in Windows 8 and above, and equivalent Windows Server versions.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information about interpreting these results is available on the [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='SRUM') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}

        {{ $rows := Query "SELECT * FROM source(source='RecentApps') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## RecentApps

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        RecentApps is a record of programs run by users. This is a newer artifact and is not as extensively researched as other sources of program execution. RecentApps also provides a launch count per user, which can be valuable for profiling execution history.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information about interpreting these results is available on the [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='RecentApps') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}

        {{ $rows := Query "SELECT * FROM source(source='Timeline') LIMIT 1" | Expand }}
        {{ if $rows }}

        ## Timeline

          <div role="button" class="btn btn-primary btn-block row collapsible">View Details</div>
          <div class="collapse row"><div class="card card-body overflow-auto">

        The Timeline is a new feature added in Windows 10, recording recent program and file activity. It can be accessed on the taskbar, next to the Start menu. The Timeline tracks execution of GUI programs, similarly to some other artifacts, however the Timeline does not record certain background processes. It can be useful for more targeted identification of programs that were manually executed at a specific time. Under certain circumstances, it also provides more detailed information about what the user was doing in some programs.

        This feature is only available on computers running Windows 10. It is not available by default on equivalent Windows Server operating systems, although it can be enabled.

        Only the top 50 results are displayed here, with the rest of the results available in the full collection.
        
        Full information about interpreting these results is available on the [wiki](https://github.com/CCXLabs/CCXDigger/wiki/Program-Execution-%5B0.1%5D).

          {{ Query "SELECT * FROM source(source='Timeline') LIMIT 50" | Table }}</div>
          </div>

        {{ end }}
